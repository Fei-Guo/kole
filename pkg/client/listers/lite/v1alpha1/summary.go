/*
Copyright 2022 The OpenYurt Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openyurtio/kole/pkg/apis/lite/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SummaryLister helps list Summaries.
// All objects returned here must be treated as read-only.
type SummaryLister interface {
	// List lists all Summaries in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Summary, err error)
	// Summaries returns an object that can list and get Summaries.
	Summaries(namespace string) SummaryNamespaceLister
	SummaryListerExpansion
}

// summaryLister implements the SummaryLister interface.
type summaryLister struct {
	indexer cache.Indexer
}

// NewSummaryLister returns a new SummaryLister.
func NewSummaryLister(indexer cache.Indexer) SummaryLister {
	return &summaryLister{indexer: indexer}
}

// List lists all Summaries in the indexer.
func (s *summaryLister) List(selector labels.Selector) (ret []*v1alpha1.Summary, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Summary))
	})
	return ret, err
}

// Summaries returns an object that can list and get Summaries.
func (s *summaryLister) Summaries(namespace string) SummaryNamespaceLister {
	return summaryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SummaryNamespaceLister helps list and get Summaries.
// All objects returned here must be treated as read-only.
type SummaryNamespaceLister interface {
	// List lists all Summaries in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Summary, err error)
	// Get retrieves the Summary from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Summary, error)
	SummaryNamespaceListerExpansion
}

// summaryNamespaceLister implements the SummaryNamespaceLister
// interface.
type summaryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Summaries in the indexer for a given namespace.
func (s summaryNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Summary, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Summary))
	})
	return ret, err
}

// Get retrieves the Summary from the indexer for a given namespace and name.
func (s summaryNamespaceLister) Get(name string) (*v1alpha1.Summary, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("summary"), name)
	}
	return obj.(*v1alpha1.Summary), nil
}
